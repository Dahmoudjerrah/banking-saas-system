"""
Django settings for saas project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY")
DEBUG = config("DEBUG", default=False, cast=bool)


ALLOWED_HOSTS = [
    '127.0.0.1',
    '127.0.0.1:8085',
    'localhost',
    '192.168.74.184',
    '192.168.1.134',
    '192.168.100.72',
    'backend.next-saas.cloud',
]


#ALLOWED_HOSTS = ['localhost','192.168.100.16']
#ALLOWED_HOSTS = ['localhost', '192.168.100.135']
# Application definition

# KEYCLOAK_CONFIG = {
#     'KEYCLOAK_SERVER_URL': "http://localhost:8180/",
#     'KEYCLOAK_REALM': "next-realm",
#     'KEYCLOAK_CLIENT_ID': "sedad",
#     'KEYCLOAK_CLIENT_SECRET': "c7fnLz03oqMLhU4mRyg9e56yUoFvzPPx",
# }

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',
    'apps.users.apps.UsersConfig',
    'apps.banks',
    'apps.transactions',
    'apps.accounts',
    'apps.adminselect', 
]

MIDDLEWARE = [
   'corsheaders.middleware.CorsMiddleware',
    'core.middleware.BankMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
   
]

AUTHENTICATION_BACKENDS = [
    'apps.users.authentication.BankSpecificAuthenticationBackend',
    'django.contrib.auth.backends.ModelBackend',  # Keep the default backend as a fallback
]

CHINGUISOFT_VALIDATION_KEY = 'bOD4fydSCjVCfH8d'
CHINGUISOFT_VALIDATION_TOKEN = '7139PpwryaEXTVPcSi3T3kqsHVX3B0VC'


ROOT_URLCONF = 'saas.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'saas.wsgi.application'
REST_FRAMEWORK = {
    
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        #'core.keycloak_auth.KeycloakAuthentication',
      
    )
    
}
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=5),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    # 'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_TOKEN_CLASSES':('rest_framework_simplejwt.tokens.AccessToken',),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'TOKEN_TYPE_CLAIM': 'token_type',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=15),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
      'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,
}

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DB_NAME_SAAS'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST'),
        'PORT': config('DB_PORT_SAAS'),
    },
    'rasidi': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DB_NAME_RASIDI'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST_RASIDI'),
        'PORT': config('DB_PORT_RASIDI'),
    },
    'gaza': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DB_NAME_GAZA'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST_GAZA'),
        'PORT': config('DB_PORT_GAZA'),
    },
    'sedad': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DB_NAME_SEDAD'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST_SEDAD'),
        'PORT': config('DB_PORT_SEDAD'),
    }
}

DATABASE_ROUTERS = ['core.routers.TenantRouter']
# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3001", 
    "http://localhost:52767",
    "http://localhost:8080",
    "http://127.0.0.1:8080",
    "http://192.168.74.184:8080",  # Adresse de votre serveur React
    #"http://192.168.100.135"
    "http://192.168.100.16:8080",
    "http://localhost:8280",
    "http://127.0.0.1:8280",
    #"http://localhost:57751"
]

CORS_ALLOW_METHODS = [
    'GET',
    'POST',
    'PUT',
    'PATCH',
    'DELETE',
    'OPTIONS'
]

# Permettre tous les en-tÃªtes
CORS_ALLOW_HEADERS = [
    # 'content-type',
    # 'authorization',
    # 'x-csrftoken',
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'x-source-bank-code',
    'x-destination-bank-code',
    'apikey'
]
CORS_ALLOW_ALL_ORIGINS = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/
STATIC_ROOT = BASE_DIR / 'staticfiles'

STATIC_URL = 'static/'


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'users.User'
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS.append("http://localhost:8280")

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
}